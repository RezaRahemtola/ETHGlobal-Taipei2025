name: CI

on:
  push:
  pull_request:

jobs:
  front-lint:
    name: "Front: Lint"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache-dependency-path: 'front/package-lock.json'
      - name: Install dependencies
        run: npm ci --force
      - name: Run ESLint
        run: npm run lint

  front-build:
    name: "Front: Build"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache-dependency-path: 'front/package-lock.json'
      - name: Install dependencies
        run: npm ci --force
      - name: Build project
        run: npm run build

  backend-mypy:
    name: "Backend: mypy"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v5
        with:
          python-version-file: 'backend/pyproject.toml'
          cache: 'poetry'
      - name: Install dependencies
        run: poetry install
      - uses: tsuyoshicho/action-mypy@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-check
          target: src
          execute_command: 'poetry run mypy'
          workdir: 'backend'

  backend-ruff:
    name: "Backend: ruff"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v5
        with:
          python-version-file: 'backend/pyproject.toml'
          cache: 'poetry'
      - name: Install dependencies
        run: pip install ruff
      - name: Run Ruff
        run: ruff check --output-format=github
